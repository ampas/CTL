name: CMake - AddressSanitizer

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'doc/**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: asan

jobs:
  test:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:

    - name: install dependencies - openexr/ilmbase v2.5
      run:  |
        cd ..
        sudo apt-get -y install zlib1g-dev &&
        git clone https://github.com/AcademySoftwareFoundation/openexr.git &&
        cd openexr &&
        git checkout RB-2.5 &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install

    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: | 
        cd ${{ github.workspace }}
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Make and run unit tests
      working-directory: ${{github.workspace}}/build
      run: make check 
    
    - name: IlmCtlTest
      if: always()
      working-directory: ${{github.workspace}}/build/unittest/IlmCtl
      run: ./IlmCtlTest 

    - name: IlmCtlMath
      if: always()
      working-directory: ${{github.workspace}}/build/unittest/IlmCtlMath
      run: ./IlmCtlMathTest 

    - name: IlmImfCtl
      if: always()
      working-directory: ${{github.workspace}}/build/unittest/IlmImfCtl
      run: ./IlmImfCtlTest 
